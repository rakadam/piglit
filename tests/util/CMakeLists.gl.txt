include_directories(
	${GLEXT_INCLUDE_DIR}
	${OPENGL_INCLUDE_PATH}
	${GLUT_INCLUDE_DIR}
	)

set(UTIL_SOURCES
	${UTIL_SOURCES}
	glew.c
	piglit-shader.c
	piglit-shader-gl.c
	piglit-transform-feedback.c
	piglit-util-gl.c
	piglit-vbo.cpp
	sized-internalformats.c
	)

# glew.c is copied verbatim from upstream and has C99 on MacOSX so silent the warnings
if (C_COMPILER_FLAG_WDECL_AFTER_STMT)
	set_property (SOURCE glew.c
		PROPERTY COMPILE_FLAGS -Wno-declaration-after-statement
	)
endif ()

IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	add_definitions ( -DUSE_GLX )
	add_library (piglitglxutil
		    piglit-shader.c
		    piglit-shader-gl.c
		    piglit-transform-feedback.c
		    piglit-util.c
		    piglit-util-enum.c
		    piglit-util-gl.c
		    piglit-glx-framework.c
		    piglit-glx-util.c
		    glew.c
	)
	set (UTIL_SOURCES
		${UTIL_SOURCES}
		piglit-glx-util.c
	)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

add_library (piglitutil
	${UTIL_SOURCES}
	${UTIL_FRAMEWORK}
)

add_library (piglitutilocl
	${UTIL_SOURCES}
	${UTIL_OCL_FRAMEWORK}
  piglit-util-opencl.c
)

add_executable(oclembed
  oclembed.c
)

add_executable(oclfunctest
  oclfunctest.c
)

if(UNIX)
	target_link_libraries(piglitutil m)
endif(UNIX)

# vim: ft=cmake:
